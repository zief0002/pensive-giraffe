library(modelr)
library(patchwork)
library(tidyverse)
library(tidymodels)
# Import and view data
usa = read_csv("https://raw.githubusercontent.com/ief0002/pensive-giraffe/main/data/states-2019.csv")
# Import and view data
usa = read_csv("https://raw.githubusercontent.com/zief0002/pensive-giraffe/main/data/states-2019.csv")
install.packages("rmdformats")
install.packages("ggExtra")
devtools::install_github("hadley/emo")
install.packages("devtools")
devtools::install_github("hadley/emo")
devtools::install_github("zief0002/educate")
install.packages("car")
install.packages("carData")
install.packages("corrr")
install.packages("ggsci")
mse_1 = rep(NA, 52)
mse_2 = rep(NA, 52)
mse_3 = rep(NA, 52)
mse_4 = rep(NA, 52)
mse_5 = rep(NA, 52)
for(i in 1:nrow(z_usa)){
train = z_usa |> filter(row_number() != i)
validate = z_usa |> filter(row_number() == i)
lm.1 = lm(life_expectancy ~ -1 + income,                                    data = train)
lm.2 = lm(life_expectancy ~ -1 + income + population,                       data = train)
lm.3 = lm(life_expectancy ~ -1 + income + population + illiteracy,          data = train)
lm.4 = lm(life_expectancy ~ -1 + income + population + illiteracy + murder, data = train)
yhat_1 = predict(lm.1, newdata = validate)
yhat_2 = predict(lm.2, newdata = validate)
yhat_3 = predict(lm.3, newdata = validate)
yhat_4 = predict(lm.4, newdata = validate)
mse_1[i] = (validate$life_expectancy - yhat_1) ^ 2
mse_2[i] = (validate$life_expectancy - yhat_2) ^ 2
mse_3[i] = (validate$life_expectancy - yhat_3) ^ 2
mse_4[i] = (validate$life_expectancy - yhat_4) ^ 2
}
# Create standardized variables after removing state names
z_usa = usa |>
select(-state) |>
scale(center = TRUE, scale = TRUE) |>
data.frame()
# View data
z_usa
# Loop through the cross-validation
for(i in 1:nrow(z_usa)){
train = z_usa |> filter(row_number() != i)
validate = z_usa |> filter(row_number() == i)
lm.1 = lm(life_expectancy ~ -1 + income,                                    data = train)
lm.2 = lm(life_expectancy ~ -1 + income + population,                       data = train)
lm.3 = lm(life_expectancy ~ -1 + income + population + illiteracy,          data = train)
lm.4 = lm(life_expectancy ~ -1 + income + population + illiteracy + murder, data = train)
yhat_1 = predict(lm.1, newdata = validate)
yhat_2 = predict(lm.2, newdata = validate)
yhat_3 = predict(lm.3, newdata = validate)
yhat_4 = predict(lm.4, newdata = validate)
mse_1[i] = (validate$life_expectancy - yhat_1) ^ 2
mse_2[i] = (validate$life_expectancy - yhat_2) ^ 2
mse_3[i] = (validate$life_expectancy - yhat_3) ^ 2
mse_4[i] = (validate$life_expectancy - yhat_4) ^ 2
}
mse_1
data.frame(cv_mse_1 = mse_1, cv_mse_2 = mse_2)
my_cv_mse = data.frame(
case = 1:52,
cv_mse_1 = mse_1,
cv_mse_2 = mse_2,
cv_mse_3 = mse_3,
cv_mse_4 = mse_4,
cv_mse_5 = mse_5,
)
# Create data frame of results
my_cv_mse = data.frame(
case = 1:52,
cv_mse_1 = mse_1,
cv_mse_2 = mse_2,
cv_mse_3 = mse_3,
cv_mse_4 = mse_4,
cv_mse_5 = mse_5
)
head(my_cv_mse)
